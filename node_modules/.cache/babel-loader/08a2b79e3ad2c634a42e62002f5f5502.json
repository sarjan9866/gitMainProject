{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nimport { Observable, Subject } from 'rxjs';\nexport var StateObservable = function (_Observable) {\n  _inherits(StateObservable, _Observable);\n  function StateObservable(stateSubject, initialState) {\n    _classCallCheck(this, StateObservable);\n    var _this = _possibleConstructorReturn(this, (StateObservable.__proto__ || Object.getPrototypeOf(StateObservable)).call(this, function (subscriber) {\n      var subscription = _this.__notifier.subscribe(subscriber);\n      if (subscription && !subscription.closed) {\n        subscriber.next(_this.value);\n      }\n      return subscription;\n    }));\n    _this.value = initialState;\n    _this.__notifier = new Subject();\n    _this.__subscription = stateSubject.subscribe(function (value) {\n      // We only want to update state$ if it has actually changed since\n      // redux requires reducers use immutability patterns.\n      // This is basically what distinctUntilChanged() does but it's so simple\n      // we don't need to pull that code in\n      if (value !== _this.value) {\n        _this.value = value;\n        _this.__notifier.next(value);\n      }\n    });\n    return _this;\n  }\n  return StateObservable;\n}(Observable);","map":{"version":3,"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Observable","Subject","StateObservable","_Observable","stateSubject","initialState","_this","getPrototypeOf","subscriber","subscription","__notifier","subscribe","closed","next","__subscription"],"sources":["D:/Desktop/sarjanHardware/sarjanHardware/node_modules/redux-observable/lib/esm/StateObservable.js"],"sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport { Observable, Subject } from 'rxjs';\n\nexport var StateObservable = function (_Observable) {\n  _inherits(StateObservable, _Observable);\n\n  function StateObservable(stateSubject, initialState) {\n    _classCallCheck(this, StateObservable);\n\n    var _this = _possibleConstructorReturn(this, (StateObservable.__proto__ || Object.getPrototypeOf(StateObservable)).call(this, function (subscriber) {\n      var subscription = _this.__notifier.subscribe(subscriber);\n      if (subscription && !subscription.closed) {\n        subscriber.next(_this.value);\n      }\n      return subscription;\n    }));\n\n    _this.value = initialState;\n    _this.__notifier = new Subject();\n    _this.__subscription = stateSubject.subscribe(function (value) {\n      // We only want to update state$ if it has actually changed since\n      // redux requires reducers use immutability patterns.\n      // This is basically what distinctUntilChanged() does but it's so simple\n      // we don't need to pull that code in\n      if (value !== _this.value) {\n        _this.value = value;\n        _this.__notifier.next(value);\n      }\n    });\n    return _this;\n  }\n\n  return StateObservable;\n}(Observable);"],"mappings":"AAAA,SAASA,eAAeA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EAAE,IAAI,EAAED,QAAQ,YAAYC,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIC,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,SAASC,0BAA0BA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAAE,IAAI,CAACD,IAAI,EAAE;IAAE,MAAM,IAAIE,cAAc,CAAC,2DAA2D,CAAC;EAAE;EAAE,OAAOD,IAAI,KAAK,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,CAAC,GAAGA,IAAI,GAAGD,IAAI;AAAE;AAE/O,SAASG,SAASA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAAE,IAAI,OAAOA,UAAU,KAAK,UAAU,IAAIA,UAAU,KAAK,IAAI,EAAE;IAAE,MAAM,IAAIP,SAAS,CAAC,0DAA0D,GAAG,OAAOO,UAAU,CAAC;EAAE;EAAED,QAAQ,CAACE,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACH,UAAU,IAAIA,UAAU,CAACC,SAAS,EAAE;IAAEG,WAAW,EAAE;MAAEC,KAAK,EAAEN,QAAQ;MAAEO,UAAU,EAAE,KAAK;MAAEC,QAAQ,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAK;EAAE,CAAC,CAAC;EAAE,IAAIR,UAAU,EAAEE,MAAM,CAACO,cAAc,GAAGP,MAAM,CAACO,cAAc,CAACV,QAAQ,EAAEC,UAAU,CAAC,GAAGD,QAAQ,CAACW,SAAS,GAAGV,UAAU;AAAE;AAE7e,SAASW,UAAU,EAAEC,OAAO,QAAQ,MAAM;AAE1C,OAAO,IAAIC,eAAe,GAAG,UAAUC,WAAW,EAAE;EAClDhB,SAAS,CAACe,eAAe,EAAEC,WAAW,CAAC;EAEvC,SAASD,eAAeA,CAACE,YAAY,EAAEC,YAAY,EAAE;IACnD1B,eAAe,CAAC,IAAI,EAAEuB,eAAe,CAAC;IAEtC,IAAII,KAAK,GAAGvB,0BAA0B,CAAC,IAAI,EAAE,CAACmB,eAAe,CAACH,SAAS,IAAIR,MAAM,CAACgB,cAAc,CAACL,eAAe,CAAC,EAAEjB,IAAI,CAAC,IAAI,EAAE,UAAUuB,UAAU,EAAE;MAClJ,IAAIC,YAAY,GAAGH,KAAK,CAACI,UAAU,CAACC,SAAS,CAACH,UAAU,CAAC;MACzD,IAAIC,YAAY,IAAI,CAACA,YAAY,CAACG,MAAM,EAAE;QACxCJ,UAAU,CAACK,IAAI,CAACP,KAAK,CAACZ,KAAK,CAAC;MAC9B;MACA,OAAOe,YAAY;IACrB,CAAC,CAAC,CAAC;IAEHH,KAAK,CAACZ,KAAK,GAAGW,YAAY;IAC1BC,KAAK,CAACI,UAAU,GAAG,IAAIT,OAAO,CAAC,CAAC;IAChCK,KAAK,CAACQ,cAAc,GAAGV,YAAY,CAACO,SAAS,CAAC,UAAUjB,KAAK,EAAE;MAC7D;MACA;MACA;MACA;MACA,IAAIA,KAAK,KAAKY,KAAK,CAACZ,KAAK,EAAE;QACzBY,KAAK,CAACZ,KAAK,GAAGA,KAAK;QACnBY,KAAK,CAACI,UAAU,CAACG,IAAI,CAACnB,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC;IACF,OAAOY,KAAK;EACd;EAEA,OAAOJ,eAAe;AACxB,CAAC,CAACF,UAAU,CAAC"},"metadata":{},"sourceType":"module"}
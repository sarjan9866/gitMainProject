{"ast":null,"code":"export const isEmpty = obj => {\n  if (typeof obj === \"number\") {\n    return false;\n  }\n\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) return false;\n  }\n\n  return true;\n};\nexport const isObject = obj => {\n  if (obj instanceof Object && !(obj instanceof Array)) {\n    return true;\n  }\n\n  return false;\n};\nexport const isArray = obj => {\n  if (obj instanceof Array) {\n    return true;\n  }\n\n  return false;\n};\nexport const numberMask = number => {\n  if (number) {\n    let cv = -1;\n    cv = number.replace(/\\D/g, \"\").match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\n    return !cv[2] ? cv[1] : \"(\" + cv[1] + \") \" + cv[2] + (cv[3] ? \"-\" + cv[3] : \"\");\n  } else {\n    return undefined;\n  }\n};\nexport const listSearch = (form, mainList, setList) => {\n  let filteredData = [];\n  const temp = [];\n\n  for (const key in form.getFieldsValue()) {\n    if (form.getFieldsValue()[key]) {\n      const tempFilteredData = !isEmpty(filteredData) ? filteredData : mainList;\n      filteredData = tempFilteredData.filter(item => {\n        if (typeof form.getFieldValue(key) === \"string\" && isNaN(Number(form.getFieldValue(key)))) {\n          return item[key].toLowerCase().includes(form.getFieldValue(key).toLowerCase());\n        }\n\n        return item[key] === form.getFieldValue(key);\n      });\n      temp.push(true);\n    } else {\n      temp.push(false);\n    }\n  }\n\n  setList(filteredData);\n\n  if (!temp.includes(true)) {\n    setList(mainList);\n  }\n};","map":{"version":3,"sources":["D:/Desktop/sarjanHardware/sarjanHardware/src/Utils/CommonUtlis.js"],"names":["isEmpty","obj","key","hasOwnProperty","isObject","Object","Array","isArray","numberMask","number","cv","replace","match","undefined","listSearch","form","mainList","setList","filteredData","temp","getFieldsValue","tempFilteredData","filter","item","getFieldValue","isNaN","Number","toLowerCase","includes","push"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,GAAD,IAAS;AAC5B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAO,KAAP;AACD;;AACD,OAAK,IAAIC,GAAT,IAAgBD,GAAhB,EAAqB;AACnB,QAAIA,GAAG,CAACE,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B,OAAO,KAAP;AAC9B;;AACD,SAAO,IAAP;AACD,CARI;AAUL,OAAO,MAAME,QAAQ,GAAIH,GAAD,IAAS;AAC/B,MAAIA,GAAG,YAAYI,MAAf,IAAyB,EAAEJ,GAAG,YAAYK,KAAjB,CAA7B,EAAsD;AACpD,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CALM;AAOP,OAAO,MAAMC,OAAO,GAAIN,GAAD,IAAS;AAC9B,MAAIA,GAAG,YAAYK,KAAnB,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CALM;AAOP,OAAO,MAAME,UAAU,GAAIC,MAAD,IAAY;AACpC,MAAIA,MAAJ,EAAY;AACV,QAAIC,EAAE,GAAG,CAAC,CAAV;AACAA,IAAAA,EAAE,GAAGD,MAAM,CAACE,OAAP,CAAe,KAAf,EAAsB,EAAtB,EAA0BC,KAA1B,CAAgC,6BAAhC,CAAL;AACA,WAAO,CAACF,EAAE,CAAC,CAAD,CAAH,GACHA,EAAE,CAAC,CAAD,CADC,GAEH,MAAMA,EAAE,CAAC,CAAD,CAAR,GAAc,IAAd,GAAqBA,EAAE,CAAC,CAAD,CAAvB,IAA8BA,EAAE,CAAC,CAAD,CAAF,GAAQ,MAAMA,EAAE,CAAC,CAAD,CAAhB,GAAsB,EAApD,CAFJ;AAGD,GAND,MAMO;AACL,WAAOG,SAAP;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,KAA6B;AACrD,MAAIC,YAAY,GAAG,EAAnB;AACA,QAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,MAAMjB,GAAX,IAAkBa,IAAI,CAACK,cAAL,EAAlB,EAAyC;AACvC,QAAIL,IAAI,CAACK,cAAL,GAAsBlB,GAAtB,CAAJ,EAAgC;AAC9B,YAAMmB,gBAAgB,GAAG,CAACrB,OAAO,CAACkB,YAAD,CAAR,GAAyBA,YAAzB,GAAwCF,QAAjE;AACAE,MAAAA,YAAY,GAAGG,gBAAgB,CAACC,MAAjB,CAAyBC,IAAD,IAAU;AAC/C,YACE,OAAOR,IAAI,CAACS,aAAL,CAAmBtB,GAAnB,CAAP,KAAmC,QAAnC,IACAuB,KAAK,CAACC,MAAM,CAACX,IAAI,CAACS,aAAL,CAAmBtB,GAAnB,CAAD,CAAP,CAFP,EAGE;AACA,iBAAOqB,IAAI,CAACrB,GAAD,CAAJ,CACJyB,WADI,GAEJC,QAFI,CAEKb,IAAI,CAACS,aAAL,CAAmBtB,GAAnB,EAAwByB,WAAxB,EAFL,CAAP;AAGD;;AACD,eAAOJ,IAAI,CAACrB,GAAD,CAAJ,KAAca,IAAI,CAACS,aAAL,CAAmBtB,GAAnB,CAArB;AACD,OAVc,CAAf;AAWAiB,MAAAA,IAAI,CAACU,IAAL,CAAU,IAAV;AACD,KAdD,MAcO;AACLV,MAAAA,IAAI,CAACU,IAAL,CAAU,KAAV;AACD;AACF;;AAEDZ,EAAAA,OAAO,CAACC,YAAD,CAAP;;AACA,MAAI,CAACC,IAAI,CAACS,QAAL,CAAc,IAAd,CAAL,EAA0B;AACxBX,IAAAA,OAAO,CAACD,QAAD,CAAP;AACD;AACF,CA3BM","sourcesContent":["export const isEmpty = (obj) => {\r\n    if (typeof obj === \"number\") {\r\n      return false;\r\n    }\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) return false;\r\n    }\r\n    return true;\r\n  };\r\n  \r\n  export const isObject = (obj) => {\r\n    if (obj instanceof Object && !(obj instanceof Array)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  export const isArray = (obj) => {\r\n    if (obj instanceof Array) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n  \r\n  export const numberMask = (number) => {\r\n    if (number) {\r\n      let cv = -1;\r\n      cv = number.replace(/\\D/g, \"\").match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\r\n      return !cv[2]\r\n        ? cv[1]\r\n        : \"(\" + cv[1] + \") \" + cv[2] + (cv[3] ? \"-\" + cv[3] : \"\");\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n  \r\n  export const listSearch = (form, mainList, setList) => {\r\n    let filteredData = [];\r\n    const temp = [];\r\n    for (const key in form.getFieldsValue()) {\r\n      if (form.getFieldsValue()[key]) {\r\n        const tempFilteredData = !isEmpty(filteredData) ? filteredData : mainList;\r\n        filteredData = tempFilteredData.filter((item) => {\r\n          if (\r\n            typeof form.getFieldValue(key) === \"string\" &&\r\n            isNaN(Number(form.getFieldValue(key)))\r\n          ) {\r\n            return item[key]\r\n              .toLowerCase()\r\n              .includes(form.getFieldValue(key).toLowerCase());\r\n          }\r\n          return item[key] === form.getFieldValue(key);\r\n        });\r\n        temp.push(true);\r\n      } else {\r\n        temp.push(false);\r\n      }\r\n    }\r\n  \r\n    setList(filteredData);\r\n    if (!temp.includes(true)) {\r\n      setList(mainList);\r\n    }\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}
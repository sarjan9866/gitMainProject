{"ast":null,"code":"/** @format */\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport rootReducers from \"./RootReducer\";\nimport { RootEpic } from \"./RootEpic\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport persistReducer from \"redux-persist/es/persistReducer\";\nexport const history = createBrowserHistory();\nconst epicMiddleware = createEpicMiddleware();\nconst middleware = [epicMiddleware];\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"AuthReducer\"]\n};\n\nconst persistedReducer = history => persistReducer(persistConfig, rootReducers(history));\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : compose;\nconst initialState = {};\nconst store = createStore(persistedReducer(history), initialState, compose(applyMiddleware(...middleware), process.env.NODE_ENV === \"development\" ? reduxDevTools : compose));\nconst persistor = persistStore(store);\nepicMiddleware.run(RootEpic);\nexport { store, persistor };","map":{"version":3,"sources":["D:/Desktop/sarjanHardware/sarjanHardware/src/Redux/ConfigureStore.js"],"names":["createEpicMiddleware","compose","createStore","applyMiddleware","createBrowserHistory","rootReducers","RootEpic","persistStore","storage","persistReducer","history","epicMiddleware","middleware","persistConfig","key","whitelist","persistedReducer","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","initialState","store","process","env","NODE_ENV","persistor","run"],"mappings":"AAAA;AAEA,SAASA,oBAAT,QAAqC,kBAArC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,OAAO,MAAMC,OAAO,GAAGN,oBAAoB,EAApC;AACP,MAAMO,cAAc,GAAGX,oBAAoB,EAA3C;AACA,MAAMY,UAAU,GAAG,CAACD,cAAD,CAAnB;AAEA,MAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAAO,EAAEA,OAFW;AAGpBO,EAAAA,SAAS,EAAE,CAAC,aAAD;AAHS,CAAtB;;AAKA,MAAMC,gBAAgB,GAAIN,OAAD,IAAaD,cAAc,CAACI,aAAD,EAAgBR,YAAY,CAACK,OAAD,CAA5B,CAApD;;AAEA,MAAMO,aAAa,GAAGC,MAAM,CAACC,4BAAP,GAClBD,MAAM,CAACC,4BAAP,EADkB,GAElBlB,OAFJ;AAGA,MAAMmB,YAAY,GAAG,EAArB;AACA,MAAMC,KAAK,GAAGnB,WAAW,CACvBc,gBAAgB,CAACN,OAAD,CADO,EAEvBU,YAFuB,EAGvBnB,OAAO,CACLE,eAAe,CAAC,GAAGS,UAAJ,CADV,EAELU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCP,aAAzC,GAAyDhB,OAFpD,CAHgB,CAAzB;AAQA,MAAMwB,SAAS,GAAGlB,YAAY,CAACc,KAAD,CAA9B;AACAV,cAAc,CAACe,GAAf,CAAmBpB,QAAnB;AACA,SAASe,KAAT,EAAgBI,SAAhB","sourcesContent":["/** @format */\n\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport rootReducers from \"./RootReducer\";\nimport { RootEpic } from \"./RootEpic\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport persistReducer from \"redux-persist/es/persistReducer\";\n\nexport const history = createBrowserHistory();\nconst epicMiddleware = createEpicMiddleware();\nconst middleware = [epicMiddleware];\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"AuthReducer\"],\n};\nconst persistedReducer = (history) => persistReducer(persistConfig, rootReducers(history));\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\n  : compose;\nconst initialState = {};\nconst store = createStore(\n  persistedReducer(history),\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    process.env.NODE_ENV === \"development\" ? reduxDevTools : compose\n  )\n);\nconst persistor = persistStore(store);\nepicMiddleware.run(RootEpic);\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}
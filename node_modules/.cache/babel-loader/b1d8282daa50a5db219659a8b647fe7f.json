{"ast":null,"code":"/** @format */\n\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport rootReducers from \"./RootReducer\";\nimport { RootEpic } from \"./RootEpic\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport persistReducer from \"redux-persist/es/persistReducer\";\nexport const history = createBrowserHistory();\nconst epicMiddleware = createEpicMiddleware();\nconst middleware = [epicMiddleware];\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"AuthReducer\"]\n};\nconst persistedReducer = history => persistReducer(persistConfig, rootReducers(history));\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : compose;\nconst initialState = {};\nconst store = createStore(persistedReducer(history), initialState, compose(applyMiddleware(...middleware), process.env.NODE_ENV === \"development\" ? reduxDevTools : compose));\nconst persistor = persistStore(store);\nepicMiddleware.run(RootEpic);\nexport { store, persistor };","map":{"version":3,"names":["createEpicMiddleware","compose","createStore","applyMiddleware","createBrowserHistory","rootReducers","RootEpic","persistStore","storage","persistReducer","history","epicMiddleware","middleware","persistConfig","key","whitelist","persistedReducer","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","initialState","store","process","env","NODE_ENV","persistor","run"],"sources":["D:/Desktop/sarjanHardware/sarjanHardware/src/Redux/ConfigureStore.js"],"sourcesContent":["/** @format */\n\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport rootReducers from \"./RootReducer\";\nimport { RootEpic } from \"./RootEpic\";\nimport persistStore from \"redux-persist/es/persistStore\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport persistReducer from \"redux-persist/es/persistReducer\";\n\nexport const history = createBrowserHistory();\nconst epicMiddleware = createEpicMiddleware();\nconst middleware = [epicMiddleware];\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"AuthReducer\"],\n};\nconst persistedReducer = (history) => persistReducer(persistConfig, rootReducers(history));\n\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__\n  ? window.__REDUX_DEVTOOLS_EXTENSION__()\n  : compose;\nconst initialState = {};\nconst store = createStore(\n  persistedReducer(history),\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    process.env.NODE_ENV === \"development\" ? reduxDevTools : compose\n  )\n);\nconst persistor = persistStore(store);\nepicMiddleware.run(RootEpic);\nexport { store, persistor };\n"],"mappings":"AAAA;;AAEA,SAASA,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,OAAO,EAAEC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,OAAOC,YAAY,MAAM,eAAe;AACxC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,OAAO,MAAM,2BAA2B,CAAC,CAAC;AACjD,OAAOC,cAAc,MAAM,iCAAiC;AAE5D,OAAO,MAAMC,OAAO,GAAGN,oBAAoB,CAAC,CAAC;AAC7C,MAAMO,cAAc,GAAGX,oBAAoB,CAAC,CAAC;AAC7C,MAAMY,UAAU,GAAG,CAACD,cAAc,CAAC;AAEnC,MAAME,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXN,OAAO,EAAEA,OAAO;EAChBO,SAAS,EAAE,CAAC,aAAa;AAC3B,CAAC;AACD,MAAMC,gBAAgB,GAAIN,OAAO,IAAKD,cAAc,CAACI,aAAa,EAAER,YAAY,CAACK,OAAO,CAAC,CAAC;AAE1F,MAAMO,aAAa,GAAGC,MAAM,CAACC,4BAA4B,GACrDD,MAAM,CAACC,4BAA4B,CAAC,CAAC,GACrClB,OAAO;AACX,MAAMmB,YAAY,GAAG,CAAC,CAAC;AACvB,MAAMC,KAAK,GAAGnB,WAAW,CACvBc,gBAAgB,CAACN,OAAO,CAAC,EACzBU,YAAY,EACZnB,OAAO,CACLE,eAAe,CAAC,GAAGS,UAAU,CAAC,EAC9BU,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,GAAGP,aAAa,GAAGhB,OAC3D,CACF,CAAC;AACD,MAAMwB,SAAS,GAAGlB,YAAY,CAACc,KAAK,CAAC;AACrCV,cAAc,CAACe,GAAG,CAACpB,QAAQ,CAAC;AAC5B,SAASe,KAAK,EAAEI,SAAS"},"metadata":{},"sourceType":"module"}